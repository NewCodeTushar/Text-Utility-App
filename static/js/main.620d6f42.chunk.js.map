{"version":3,"sources":["components/Navbar.js","components/HomeForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggleMode","role","htmlFor","lable","HomeForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","placeholder","backgroundColor","row","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","typ","word","lower","charAt","slice","capital","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","_useState5","_useState6","toggleName","setToggleName","Fragment","body","components_Alert","label","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.620d6f42.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n          {/* ------------------------Navbar Head------------------------ */}\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n              <div className=\"container-fluid\">\r\n                  <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                  <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\r\n                      <span className=\"navbar-toggler-icon\"></span>\r\n                  </button>\r\n                  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                          <li className=\"nav-item\">\r\n                              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                          </li>\r\n                          <li className=\"nav-item\">\r\n                              <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n                          </li>\r\n                      </ul>\r\n                      {/* <form className=\"d-flex\" role=\"search\">\r\n                          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                      </form> */}\r\n                      <div className={`form-check form-switch text-${props.mode ==='light'? 'dark':'light'}`} >\r\n                           <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                           <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.lable}</label>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </nav>\r\n\r\n          {/* --------------------------Navbar Tail----------------- */}\r\n    </div>\r\n  )\r\n}\r\n// proptypes type declaration\r\nNavbar.propTypes ={title:propTypes.string.isRequired,\r\nAbout:propTypes.string};\r\n\r\nNavbar.defaultProps ={\r\n    title: 'Set Title here',\r\n    about: 'here'\r\n};","import React, {useState} from 'react'\r\n\r\nexport default function HomeForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Button was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Button was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"Button was clicked\");\r\n        let newText =\"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text area cleared\", \"success\");\r\n}\r\n    const handleOnchange = (event)=>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handleCopy = () =>{\r\n      //  console.log(\"I am Copy\");\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied to clipboard\", \"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extraspaces has been deleted\", \"success\");\r\n    }\r\n    const [text,setText]= useState('');\r\n  return (\r\n      <div className='container' style={{ color: props.mode === 'dark' ? 'white' : '#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n          {/* <div className=\"mb-3\">\r\n              <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n              <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"/>\r\n          </div> */}\r\n          <div className=\"mb-3\">\r\n              <textarea className=\"form-control\" value={text} onChange={handleOnchange} placeholder=\"Enter your text\" style={{ backgroundColor: props.mode === 'light' ? 'white' : 'grey', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"myBox\" row=\"1\"></textarea>\r\n          </div>\r\n          <button className=\"btn btn-primary mx-3 my-3\" onClick={handleUpClick}>Upper Case</button>\r\n          <button className=\"btn btn-primary mx-3 my 3\" onClick={handleLoClick}>Lower Case</button>\r\n          <button className=\"btn btn-primary mx-3 my-3\" onClick={handleClearClick}>Clear</button>\r\n          <button className=\"btn btn-primary mx-3 my-3\" onClick={handleCopy}>Copy</button>\r\n          <button className=\"btn btn-primary mx-3 my-3\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n          <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n              <h1>Your text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes read (Average Reading Speed)</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n          </div>\r\n    </div>\r\n  )   \r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\nfunction Alert(props) {\r\n    const capital = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    } \r\n  return (\r\nprops.alert &&  <div>\r\n                        <div className={`alert alert-${props.alert.typ} alert-dismissible fade show`} role=\"alert\">\r\n                        <strong>{capital(props.alert.typ)}</strong> :{props.alert.msg}  \r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                    </div>\r\n               </div>\r\n  )\r\n}\r\nexport default Alert","//import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar';\nimport HomeForm from './components/HomeForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\n// import{\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert =(message, type)=>{\n    setAlert({\n      msg: message,\n      typ: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  \n  const [toggleName, setToggleName] = useState('Enable Dark Mode');\n  const toggleMode =() =>{\n    if(mode === 'light'){\n      setMode('dark');\n      setToggleName(\"Enable Light Mode\");\n      document.body.style.backgroundColor ='#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else{\n      setMode('light');\n      setToggleName(\"Enable Dark Mode\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n  {/* <Router> */}\n      <Navbar title=\"My App\" about=\"About\" mode={mode} toggleMode={toggleMode} lable={toggleName}/>\n      <Alert alert={alert}/>\n    {/* <Navbar /> */}\n    <div className=\"container\">\n      {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About/>}/>          */}\n            {/* <Route exact path=\"/\" element={<HomeForm showAlert={showAlert} heading=\"Enter Your Text\" mode={mode} label=\"Enter your Text\" />}/>\n      </Routes> */}\n      <HomeForm showAlert={showAlert} heading=\"Enter Your Text\" mode={mode} label=\"Enter your Text\" />\n    </div>\n  {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}